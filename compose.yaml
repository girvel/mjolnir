services:
  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    ports:
    - "3000:3000"
    volumes:
    - grafana-storage:/var/lib/grafana
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - "9090:9090"
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - prometheus-storage:/prometheus
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    extra_hosts:
    - "host.docker.internal:host-gateway"
    restart: unless-stopped

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
    - "1883:1883"
    restart: unless-stopped
    volumes:
    - "./mosquitto.conf:/mosquitto/config/mosquitto.conf"

  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: home
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
    - postgres-storage:/var/lib/postgresql/data
    ports:
    - "127.0.0.1:5432:5432"

  saver:
    build: saver
    container_name: saver
    environment:
      POSTGRES_HOST: postgres
      MOSQUITTO_HOST: mosquitto
    depends_on:
      postgres:
        condition: service_healthy

  shadowsocks:
    build: shadowsocks
    container_name: shadowsocks
    ports:
    - "1080:1080"

  homepage:
    build: homepage
    container_name: homepage
    ports:
    - "80:8080"


volumes:
  grafana-storage:
  prometheus-storage:
  postgres-storage:
